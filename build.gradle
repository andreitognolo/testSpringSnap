buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath 'com.bmuschko:gradle-tomcat-plugin:2.2.2'
    }
}

plugins {
    id "org.flywaydb.flyway" version "3.2"
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'war'
apply plugin: 'application'
apply plugin: 'com.bmuschko.tomcat'

sourceCompatibility = 1.8
targetCompatibility = 1.8

version = '1.0'

war.baseName = "simpleSpring"

tomcat.contextPath = '/'

repositories {
    mavenCentral()
}

configurations {
    runtimeOnly
}

dependencies {
    compile "org.springframework:spring-webmvc:4.1.6.RELEASE",
            "org.springframework:spring-orm:4.1.6.RELEASE",
            "log4j:log4j:1.2.17",

            //database dependencies
            "org.postgresql:postgresql:9.3-1102-jdbc4",
            "org.hibernate:hibernate-validator:4.2.0.Final"

    providedCompile 'javax.servlet:servlet-api:2.5'

    // to run our App on Heroku
    runtimeOnly 'com.github.jsimone:webapp-runner:7.0.57.2'

    def tomcatVersion = '7.0.59'
    tomcat "org.apache.tomcat.embed:tomcat-embed-core:${tomcatVersion}",
            "org.apache.tomcat.embed:tomcat-embed-logging-juli:${tomcatVersion}",
            "org.apache.tomcat.embed:tomcat-embed-jasper:${tomcatVersion}"
}

task stage(dependsOn: ["clean", "war", "copyToLib"])

task copyToLib << {
    copy {
        from configurations.runtimeOnly.copy().setTransitive(false)
        into "$buildDir/libs"
        rename { name ->
            def artifacts = configurations.runtimeOnly.resolvedConfiguration.resolvedArtifacts
            def artifact = artifacts.find { it.file.name == name }
            "${artifact.name}.${artifact.extension}"
        }
    }
}

flyway {
    url = "jdbc:postgresql://localhost:5432/infotrackdb"
    user = "postgres"
    password = "postgres"
    driver = "org.postgresql.Driver"
    locations = ["filesystem:${project.rootDir.absolutePath}/src/main/resources/db/migration"]
}
