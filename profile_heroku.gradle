ext.propFile = new File("src/main/resources/heroku.properties")
ext.propFile.createNewFile()

task setEnv {
    def jdbcURL= "jdbc:postgresql://" + System.getenv("HEROKU_DB_PG_HOST") + ":" + System.getenv("HEROKU_DB_PG_PORT") + "/" + System.getenv("HEROKU_DB_PG_NAME") + "?user=" + System.getenv("HEROKU_DB_PG_USER") + "&password=" + System.getenv("HEROKU_DB_PG_PASSWORD") + "&ssl=true&sslfactory=org.postgresql.ssl.NonValidatingFactory"
    props.load(propFile.newDataInputStream())
    props.setProperty('postgresqlUrl', jdbcURL)
    props.setProperty('postgresqlUsername', System.getenv("HEROKU_DB_PG_USER"))
    props.setProperty('postgresqlPassword', System.getenv("HEROKU_DB_PG_PASSWORD"))
    props.setProperty('oktaCertificate', System.getenv("OKTA_CERTIFICATE"))
    props.setProperty('oktaRedirect', System.getenv("OKTA_REDIRECT"))
    props.setProperty('oktaApiKey', System.getenv("OKTA_API_KEY"))
    props.setProperty('oktaUrl', System.getenv("OKTA_URL"))
    props.setProperty('oktaEntityId', System.getenv("OKTA_ENTITY_ID"))
}

task stage(dependsOn: ["clean", "flywayMigrate", "war", "copyToLib"])
